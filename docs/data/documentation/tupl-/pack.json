{"hierarchy":{"paths":[["doc:\/\/Tuple\/documentation\/Tupl-"]]},"metadata":{"title":"Pack","roleHeading":"Structure","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Pack","kind":"identifier"}],"navigatorTitle":[{"text":"Pack","kind":"identifier"}],"symbolKind":"struct","externalID":"s:008Tupl_epa4PackV","modules":[{"name":"Tupl√©"}],"role":"symbol"},"kind":"symbol","seeAlsoSections":[{"identifiers":["doc:\/\/Tuple\/documentation\/Tuple-\/Type-Aliases","doc:\/\/Tuple\/documentation\/Tuple-\/Properties","doc:\/\/Tuple\/documentation\/Tuple-\/Instance-Methods","doc:\/\/Tuple\/documentation\/Tuple-\/Type","doc:\/\/Tuple\/documentation\/Tupl-\/Swift\/Sequence","doc:\/\/Tuple\/documentation\/Tupl-\/Swift\/Strideable\/stride(from:by:shape:)"],"generated":true}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Pack"},{"kind":"text","text":"<each "},{"kind":"genericParameter","text":"Element"},{"kind":"text","text":">"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"overview","text":"Overview","level":2,"type":"heading"},{"style":"note","content":[{"inlineContent":[{"text":"Only single values or unlabeled tuples are supported.","type":"text"}],"type":"paragraph"}],"name":"Note","type":"aside"},{"anchor":"","text":"","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"You can technically use this to wrap anything, and add extensions to it. But its main utility is in adding protocol conformance to a wrapper around unlabeled tuples. (The tuples themselves "},{"identifier":"https:\/\/forums.swift.org\/t\/pitch-user-defined-tuple-conformances\/67154","type":"reference","isActive":true},{"type":"text","text":")."}],"type":"paragraph"},{"inlineContent":[{"text":"For example, as you can see in ","type":"text"},{"type":"codeVoice","code":"PackTests"},{"text":", this allows for ","type":"text"},{"isActive":true,"overridingTitle":"encoding","type":"reference","identifier":"doc:\/\/Tuple\/documentation\/Tupl-\/Pack\/encode(to:)","overridingTitleInlineContent":[{"type":"text","text":"encoding"}]},{"text":" ","type":"text"},{"text":"and ","type":"text"},{"isActive":true,"overridingTitle":"decoding","type":"reference","identifier":"doc:\/\/Tuple\/documentation\/Tupl-\/Pack\/init(from:)","overridingTitleInlineContent":[{"type":"text","text":"decoding"}]},{"text":" tuples, and using them as ","type":"text"},{"type":"codeVoice","code":"Dictionary"},{"text":" keys.","type":"text"}],"type":"paragraph"}]}],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/Tuple\/s8CopyableP","doc:\/\/Tuple\/Se","doc:\/\/Tuple\/SE","doc:\/\/Tuple\/SQ","doc:\/\/Tuple\/SH"],"kind":"relationships","type":"conformsTo"}],"identifier":{"url":"doc:\/\/Tuple\/documentation\/Tupl-\/Pack","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"abstract":[{"text":"A workaround for not being able to extend tuples or parameter packs directly.","type":"text"}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Tuple\/documentation\/Tupl-\/Pack\/init(projectedValue:)","doc:\/\/Tuple\/documentation\/Tupl-\/Pack\/init(wrappedValue:)"],"generated":true,"anchor":"Initializers"},{"title":"Instance Properties","identifiers":["doc:\/\/Tuple\/documentation\/Tupl-\/Pack\/projectedValue","doc:\/\/Tuple\/documentation\/Tupl-\/Pack\/wrappedValue"],"generated":true,"anchor":"Instance-Properties"},{"title":"Default Implementations","identifiers":["doc:\/\/Tuple\/documentation\/Tupl-\/Pack\/Decodable-Implementations","doc:\/\/Tuple\/documentation\/Tupl-\/Pack\/Encodable-Implementations","doc:\/\/Tuple\/documentation\/Tupl-\/Pack\/Equatable-Implementations","doc:\/\/Tuple\/documentation\/Tupl-\/Pack\/Hashable-Implementations"],"generated":true,"anchor":"Default-Implementations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/tupl-\/pack"]}],"references":{"doc://Tuple/SH":{"title":"Swift.Hashable","identifier":"doc:\/\/Tuple\/SH","type":"unresolvable"},"doc://Tuple/documentation/Tupl-/Swift/Strideable/stride(from:by:shape:)":{"type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"stride"},{"kind":"text","text":"<each "},{"kind":"genericParameter","text":"Element"},{"kind":"text","text":">("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sx6StrideQa","text":"Stride","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"shape","kind":"externalParam"},{"text":": (repeat each ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":").Type) -> (repeat ","kind":"text"},{"text":"Each","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", each ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"abstract":[{"text":"Step from a starting value, by the specified amount, to fill a tuple.","type":"text"}],"title":"stride(from:by:shape:)","kind":"symbol","identifier":"doc:\/\/Tuple\/documentation\/Tupl-\/Swift\/Strideable\/stride(from:by:shape:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Strideable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"url":"\/documentation\/tupl-\/swift\/strideable\/stride(from:by:shape:)","role":"symbol"},"doc://Tuple/documentation/Tupl-/Pack":{"title":"Pack","abstract":[{"type":"text","text":"A workaround for not being able to extend tuples or parameter packs directly."}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Pack"}],"identifier":"doc:\/\/Tuple\/documentation\/Tupl-\/Pack","navigatorTitle":[{"kind":"identifier","text":"Pack"}],"kind":"symbol","url":"\/documentation\/tupl-\/pack","role":"symbol"},"https://developer.apple.com/documentation/swift/collections":{"type":"link","url":"https:\/\/developer.apple.com\/documentation\/swift\/collections","title":"Collections","identifier":"https:\/\/developer.apple.com\/documentation\/swift\/collections","titleInlineContent":[{"text":"Collections","type":"text"}]},"doc://Tuple/documentation/Tupl-/Swift/Sequence":{"title":"Sequence","kind":"symbol","role":"symbol","identifier":"doc:\/\/Tuple\/documentation\/Tupl-\/Swift\/Sequence","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Sequence","preciseIdentifier":"s:ST","kind":"identifier"}],"abstract":[{"text":"Tuples created from some of the elements of sequences.","type":"text"}],"navigatorTitle":[{"text":"Sequence","kind":"identifier"}],"url":"\/documentation\/tupl-\/swift\/sequence","type":"topic"},"https://forums.swift.org/t/pitch-user-defined-tuple-conformances/67154":{"title":"cannot conform to protocols, yet","titleInlineContent":[{"text":"cannot conform to protocols, yet","type":"text"}],"identifier":"https:\/\/forums.swift.org\/t\/pitch-user-defined-tuple-conformances\/67154","type":"link","url":"https:\/\/forums.swift.org\/t\/pitch-user-defined-tuple-conformances\/67154"},"doc://Tuple/SQ":{"title":"Swift.Equatable","identifier":"doc:\/\/Tuple\/SQ","type":"unresolvable"},"doc://Tuple/s8CopyableP":{"title":"Swift.Copyable","identifier":"doc:\/\/Tuple\/s8CopyableP","type":"unresolvable"},"doc://Tuple/documentation/Tupl-/Pack/encode(to:)":{"kind":"symbol","identifier":"doc:\/\/Tuple\/documentation\/Tupl-\/Pack\/encode(to:)","type":"topic","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s7EncoderP","text":"Encoder","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"title":"encode(to:)","role":"symbol","url":"\/documentation\/tupl-\/pack\/encode(to:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"each Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"text":".","type":"text"}]}},"doc://Tuple/documentation/Tupl-/Pack/wrappedValue":{"abstract":[],"identifier":"doc:\/\/Tuple\/documentation\/Tupl-\/Pack\/wrappedValue","url":"\/documentation\/tupl-\/pack\/wrappedvalue","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": (repeat each "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":")"}],"title":"wrappedValue","kind":"symbol","type":"topic","role":"symbol"},"doc://Tuple/documentation/Tupl-/Pack/init(from:)":{"abstract":[],"identifier":"doc:\/\/Tuple\/documentation\/Tupl-\/Pack\/init(from:)","url":"\/documentation\/tupl-\/pack\/init(from:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"each Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP","text":"Decoder"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"title":"init(from:)","kind":"symbol","type":"topic","role":"symbol"},"doc://Tuple/documentation/Tuple-/Properties":{"url":"\/documentation\/tuple-\/properties","title":"Properties","kind":"article","type":"topic","role":"collectionGroup","abstract":[{"text":"Functions that would be properties if tuples could be extended.","type":"text"}],"identifier":"doc:\/\/Tuple\/documentation\/Tuple-\/Properties"},"doc://Tuple/Se":{"title":"Swift.Decodable","identifier":"doc:\/\/Tuple\/Se","type":"unresolvable"},"doc://Tuple/SE":{"title":"Swift.Encodable","identifier":"doc:\/\/Tuple\/SE","type":"unresolvable"},"doc://Tuple/documentation/Tuple-/Type-Aliases":{"identifier":"doc:\/\/Tuple\/documentation\/Tuple-\/Type-Aliases","kind":"article","type":"topic","title":"Type Aliases","url":"\/documentation\/tuple-\/type-aliases","abstract":[{"type":"text","text":"Shorthand syntax for tuples."}],"role":"collectionGroup"},"doc://Tuple/documentation/Tupl-/Pack/Hashable-Implementations":{"title":"Hashable Implementations","url":"\/documentation\/tupl-\/pack\/hashable-implementations","type":"topic","identifier":"doc:\/\/Tuple\/documentation\/Tupl-\/Pack\/Hashable-Implementations","role":"collectionGroup","kind":"article","abstract":[]},"doc://Tuple/documentation/Tuple-/Type":{"identifier":"doc:\/\/Tuple\/documentation\/Tuple-\/Type","url":"\/documentation\/tuple-\/type","kind":"article","abstract":[{"type":"text","text":"Functions that would be type methods if tuples could be extended."}],"type":"topic","title":"Type Methods, Properties, and Operators","role":"collectionGroup"},"doc://Tuple/documentation/Tupl-/Pack/Decodable-Implementations":{"type":"topic","identifier":"doc:\/\/Tuple\/documentation\/Tupl-\/Pack\/Decodable-Implementations","abstract":[],"kind":"article","title":"Decodable Implementations","role":"collectionGroup","url":"\/documentation\/tupl-\/pack\/decodable-implementations"},"doc://Tuple/documentation/Tupl-/Pack/projectedValue":{"title":"projectedValue","url":"\/documentation\/tupl-\/pack\/projectedvalue","type":"topic","identifier":"doc:\/\/Tuple\/documentation\/Tupl-\/Pack\/projectedValue","role":"symbol","kind":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"projectedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:008Tupl_epa4PackV","text":"Pack"},{"kind":"text","text":"<repeat each "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}]},"doc://Tuple/documentation/Tuple-/Instance-Methods":{"abstract":[{"type":"text","text":"Functions that would be instance methods if tuples could be extended."}],"kind":"article","role":"collectionGroup","title":"Instance Methods","url":"\/documentation\/tuple-\/instance-methods","identifier":"doc:\/\/Tuple\/documentation\/Tuple-\/Instance-Methods","type":"topic"},"doc://Tuple/documentation/Tupl-/Pack/Encodable-Implementations":{"identifier":"doc:\/\/Tuple\/documentation\/Tupl-\/Pack\/Encodable-Implementations","url":"\/documentation\/tupl-\/pack\/encodable-implementations","role":"collectionGroup","title":"Encodable Implementations","type":"topic","abstract":[],"kind":"article"},"doc://Tuple/documentation/Tupl-/Pack/Equatable-Implementations":{"title":"Equatable Implementations","url":"\/documentation\/tupl-\/pack\/equatable-implementations","type":"topic","identifier":"doc:\/\/Tuple\/documentation\/Tupl-\/Pack\/Equatable-Implementations","role":"collectionGroup","kind":"article","abstract":[]},"doc://Tuple/documentation/Tupl-/Pack/init(projectedValue:)":{"url":"\/documentation\/tupl-\/pack\/init(projectedvalue:)","type":"topic","identifier":"doc:\/\/Tuple\/documentation\/Tupl-\/Pack\/init(projectedValue:)","role":"symbol","title":"init(projectedValue:)","kind":"symbol","abstract":[],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"projectedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Pack","preciseIdentifier":"s:008Tupl_epa4PackV"},{"kind":"text","text":"<repeat each "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">)"}]},"doc://Tuple/documentation/Tupl-/Pack/init(wrappedValue:)":{"title":"init(wrappedValue:)","kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/tupl-\/pack\/init(wrappedvalue:)","identifier":"doc:\/\/Tuple\/documentation\/Tupl-\/Pack\/init(wrappedValue:)","abstract":[],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"wrappedValue","kind":"externalParam"},{"text":": (repeat each ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"))","kind":"text"}]},"doc://Tuple/documentation/Tupl-":{"title":"Tupl√©","kind":"symbol","abstract":[{"type":"text","text":"Bridge the gap between tuples and "},{"identifier":"https:\/\/developer.apple.com\/documentation\/swift\/collections","type":"reference","isActive":true},{"type":"text","text":"."}],"type":"topic","identifier":"doc:\/\/Tuple\/documentation\/Tupl-","role":"collection","url":"\/documentation\/tupl-"}}}