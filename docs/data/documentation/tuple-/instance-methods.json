{"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/Tuple\/documentation\/Tuple-\/Type-Aliases","doc:\/\/Tuple\/documentation\/Tuple-\/Properties","doc:\/\/Tuple\/documentation\/Tuple-\/Type","doc:\/\/Tuple\/documentation\/Tupl-\/Pack","doc:\/\/Tuple\/documentation\/Tupl-\/Swift\/Sequence","doc:\/\/Tuple\/documentation\/Tupl-\/Swift\/Strideable\/stride(from:by:shape:)"]}],"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Tuple\/documentation\/Tuple-\/Instance-Methods"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/tuple-\/instance-methods"]}],"abstract":[{"text":"Functions that would be instance methods if tuples could be extended.","type":"text"}],"kind":"article","metadata":{"title":"Instance Methods","roleHeading":"API Collection","role":"collectionGroup","modules":[{"name":"Tuplé"}]},"hierarchy":{"paths":[["doc:\/\/Tuple\/documentation\/Tupl-"]]},"topicSections":[{"anchor":"Topics","identifiers":["doc:\/\/Tuple\/documentation\/Tupl-\/appending(_:)","doc:\/\/Tuple\/documentation\/Tupl-\/prepending(_:)","doc:\/\/Tuple\/documentation\/Tupl-\/callAsFunction(_:)","doc:\/\/Tuple\/documentation\/Tupl-\/repeat(_:)"]},{"anchor":"forEach","title":"forEach","identifiers":["doc:\/\/Tuple\/documentation\/Tupl-\/forEach(_:)","doc:\/\/Tuple\/documentation\/Tupl-\/forEach(_:_:)"]},{"anchor":"map","title":"map","identifiers":["doc:\/\/Tuple\/documentation\/Tupl-\/map(_:)-9rz4b","doc:\/\/Tuple\/documentation\/Tupl-\/map(_:)-138ae","doc:\/\/Tuple\/documentation\/Tupl-\/map(_:)-3zcxi"]}],"primaryContentSections":[{"kind":"content","content":[{"anchor":"","type":"heading","level":2,"text":""},{"type":"paragraph","inlineContent":[{"text":"Some of the functions in this package should be considered “instance methods”. If tuples were a named type, we could extend them with real methods that incorporate dot syntax.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"For example, to add 1 to a tuple of integers, we’d ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"like"}]},{"text":" to be able to write:","type":"text"}]},{"syntax":"swift","code":["let tuple = (1, 2, 3)","tuple.map { $0 + 1 }"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"…but the best we can do is:","type":"text"}]},{"syntax":"swift","code":["map(tuple)() { $0 + 1 }"],"type":"codeListing"},{"anchor":"Recommended-Mental-Model-for-Tuple-Instance-Methods-Unsugared-Instance-Methods","type":"heading","level":4,"text":"Recommended Mental Model for “Tuple Instance Methods”: Unsugared Instance Methods"},{"type":"paragraph","inlineContent":[{"text":"Say that we want to use ","type":"text"},{"identifier":"https:\/\/developer.apple.com\/documentation\/swift\/collection\/map(_:)","isActive":true,"type":"reference"},{"text":" on an ","type":"text"},{"code":"Int Array","type":"codeVoice"},{"text":". Because ","type":"text"},{"code":"Array","type":"codeVoice"},{"text":" is a named type, Swift provides that functionality using this syntax:","type":"text"}]},{"syntax":"swift","code":["[1, 2, 3].map { $0 + 1 }"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"But this is sugar for what’s really going on. Swift’s ","type":"text"},{"inlineContent":[{"type":"text","text":"instance"}],"type":"emphasis"},{"text":" methods are actually ","type":"text"},{"inlineContent":[{"text":"type","type":"text"}],"type":"emphasis"},{"text":" methods, which accept an instance as their argument, and return a closure. We typically think of this closure as the instance method itself.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To illustrate this, here’s an "},{"type":"codeVoice","code":"Array"},{"type":"text","text":" extension:"}]},{"syntax":"swift","code":["extension Array {","  func method() { }","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You’d normally call that using this syntax:"}]},{"syntax":"swift","code":["let instance = [1, 2, 3]","instance.method()"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"But it’s also available as a "},{"code":"static","type":"codeVoice"},{"type":"text","text":" method, on "},{"code":"Array","type":"codeVoice"},{"type":"text","text":", and can alternatively be called like this:"}]},{"syntax":"swift","code":["Array.method(instance)()"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"code":"map","type":"codeVoice"},{"type":"text","text":" from the standard library can similarly be called like so:"}]},{"syntax":"swift","code":["Array.map(instance)() { $0 + 1 }"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"That’s how the package authors think about the functions cataloged below."}]},{"style":"note","type":"aside","name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"It’s unfortunately not possible to remove the “"},{"code":"()","type":"codeVoice"},{"type":"text","text":"” before trailing closures without access to "},{"inlineContent":[{"text":"real","type":"text"}],"type":"strong"},{"type":"text","text":" instance methods. The limitation has been logged as a bug for years."}]}]}]}],"references":{"https://developer.apple.com/documentation/swift/collection/map(_:)":{"identifier":"https:\/\/developer.apple.com\/documentation\/swift\/collection\/map(_:)","type":"link","title":"map","titleInlineContent":[{"type":"codeVoice","code":"map"}],"url":"https:\/\/developer.apple.com\/documentation\/swift\/collection\/map(_:)"},"doc://Tuple/documentation/Tupl-/forEach(_:_:)":{"type":"topic","identifier":"doc:\/\/Tuple\/documentation\/Tupl-\/forEach(_:_:)","url":"\/documentation\/tupl-\/foreach(_:_:)","title":"forEach(_:_:)","kind":"symbol","role":"symbol","abstract":[{"text":"Call a closure on each element of a tuple.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"forEach"},{"kind":"text","text":"<each "},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Error"},{"kind":"text","text":">((repeat each "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"), (repeat (each "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Error"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Error"},{"kind":"text","text":")"}]},"doc://Tuple/documentation/Tuple-/Properties":{"url":"\/documentation\/tuple-\/properties","title":"Properties","kind":"article","type":"topic","role":"collectionGroup","abstract":[{"text":"Functions that would be properties if tuples could be extended.","type":"text"}],"identifier":"doc:\/\/Tuple\/documentation\/Tuple-\/Properties"},"doc://Tuple/documentation/Tupl-/map(_:)-3zcxi":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/tupl-\/map(_:)-3zcxi","abstract":[{"type":"text","text":"Transform each element of a 4-tuple."}],"identifier":"doc:\/\/Tuple\/documentation\/Tupl-\/map(_:)-3zcxi","title":"map(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Element"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Transformed"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Error"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Vectuple4","preciseIdentifier":"s:008Tupl_epa9Vectuple4a"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">) -> (("},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Error"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Transformed"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Error"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Vectuple4","preciseIdentifier":"s:008Tupl_epa9Vectuple4a"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Transformed"},{"kind":"text","text":">"}]},"doc://Tuple/documentation/Tupl-/Swift/Sequence":{"title":"Sequence","kind":"symbol","role":"symbol","identifier":"doc:\/\/Tuple\/documentation\/Tupl-\/Swift\/Sequence","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Sequence","preciseIdentifier":"s:ST","kind":"identifier"}],"abstract":[{"text":"Tuples created from some of the elements of sequences.","type":"text"}],"navigatorTitle":[{"text":"Sequence","kind":"identifier"}],"url":"\/documentation\/tupl-\/swift\/sequence","type":"topic"},"doc://Tuple/documentation/Tupl-":{"title":"Tuplé","kind":"symbol","abstract":[{"type":"text","text":"Bridge the gap between tuples and "},{"identifier":"https:\/\/developer.apple.com\/documentation\/swift\/collections","type":"reference","isActive":true},{"type":"text","text":"."}],"type":"topic","identifier":"doc:\/\/Tuple\/documentation\/Tupl-","role":"collection","url":"\/documentation\/tupl-"},"doc://Tuple/documentation/Tupl-/forEach(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"forEach"},{"kind":"text","text":"<each "},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":">((repeat each "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":")) -> ((repeat (each "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"}],"title":"forEach(_:)","abstract":[{"type":"text","text":"Call a closure on each element of a tuple."}],"identifier":"doc:\/\/Tuple\/documentation\/Tupl-\/forEach(_:)","type":"topic","kind":"symbol","url":"\/documentation\/tupl-\/foreach(_:)","role":"symbol"},"doc://Tuple/documentation/Tupl-/map(_:)-9rz4b":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/tupl-\/map(_:)-9rz4b","abstract":[{"type":"text","text":"Transform each element of a 2-tuple."}],"identifier":"doc:\/\/Tuple\/documentation\/Tupl-\/map(_:)-9rz4b","title":"map(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Element"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Transformed"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Error"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Vectuple2","preciseIdentifier":"s:008Tupl_epa9Vectuple2a"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">) -> (("},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Error"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Transformed"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Error"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Vectuple2","preciseIdentifier":"s:008Tupl_epa9Vectuple2a"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Transformed"},{"kind":"text","text":">"}]},"https://developer.apple.com/documentation/swift/collections":{"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/swift\/collections","title":"Collections","titleInlineContent":[{"text":"Collections","type":"text"}],"url":"https:\/\/developer.apple.com\/documentation\/swift\/collections"},"doc://Tuple/documentation/Tupl-/repeat(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`repeat`"},{"kind":"text","text":"<each "},{"kind":"genericParameter","text":"Element"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">((repeat each "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":")) -> ("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> (repeat "},{"kind":"typeIdentifier","text":"Each"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", each "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">)"}],"type":"topic","abstract":[{"text":"Repeat a value to match the shape of a tuple.","type":"text"}],"title":"repeat(_:)","url":"\/documentation\/tupl-\/repeat(_:)","role":"symbol","identifier":"doc:\/\/Tuple\/documentation\/Tupl-\/repeat(_:)","kind":"symbol"},"doc://Tuple/documentation/Tupl-/Swift/Strideable/stride(from:by:shape:)":{"type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"stride"},{"kind":"text","text":"<each "},{"kind":"genericParameter","text":"Element"},{"kind":"text","text":">("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sx6StrideQa","text":"Stride","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"shape","kind":"externalParam"},{"text":": (repeat each ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":").Type) -> (repeat ","kind":"text"},{"text":"Each","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", each ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"abstract":[{"text":"Step from a starting value, by the specified amount, to fill a tuple.","type":"text"}],"title":"stride(from:by:shape:)","kind":"symbol","identifier":"doc:\/\/Tuple\/documentation\/Tupl-\/Swift\/Strideable\/stride(from:by:shape:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Strideable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"url":"\/documentation\/tupl-\/swift\/strideable\/stride(from:by:shape:)","role":"symbol"},"doc://Tuple/documentation/Tupl-/prepending(_:)":{"url":"\/documentation\/tupl-\/prepending(_:)","type":"topic","kind":"symbol","identifier":"doc:\/\/Tuple\/documentation\/Tupl-\/prepending(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"prepending"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"First"},{"kind":"text","text":", each "},{"kind":"genericParameter","text":"Element"},{"kind":"text","text":">((repeat each "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":")) -> ("},{"kind":"typeIdentifier","text":"First"},{"kind":"text","text":") -> ("},{"kind":"typeIdentifier","text":"First"},{"kind":"text","text":", repeat each "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":")"}],"title":"prepending(_:)","abstract":[{"type":"text","text":"Adds an element to the beginning of a tuple."}],"role":"symbol"},"doc://Tuple/documentation/Tuple-/Type-Aliases":{"identifier":"doc:\/\/Tuple\/documentation\/Tuple-\/Type-Aliases","kind":"article","type":"topic","title":"Type Aliases","url":"\/documentation\/tuple-\/type-aliases","abstract":[{"type":"text","text":"Shorthand syntax for tuples."}],"role":"collectionGroup"},"doc://Tuple/documentation/Tupl-/map(_:)-138ae":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/tupl-\/map(_:)-138ae","abstract":[{"text":"Transform each element of a 3-tuple.","type":"text"}],"identifier":"doc:\/\/Tuple\/documentation\/Tupl-\/map(_:)-138ae","title":"map(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Element"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Transformed"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Error"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Vectuple3","preciseIdentifier":"s:008Tupl_epa9Vectuple3a"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">) -> (("},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Error"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Transformed"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Error"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Vectuple3","preciseIdentifier":"s:008Tupl_epa9Vectuple3a"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Transformed"},{"kind":"text","text":">"}]},"doc://Tuple/documentation/Tuple-/Type":{"identifier":"doc:\/\/Tuple\/documentation\/Tuple-\/Type","url":"\/documentation\/tuple-\/type","kind":"article","abstract":[{"type":"text","text":"Functions that would be type methods if tuples could be extended."}],"type":"topic","title":"Type Methods, Properties, and Operators","role":"collectionGroup"},"doc://Tuple/documentation/Tupl-/Pack":{"title":"Pack","abstract":[{"type":"text","text":"A workaround for not being able to extend tuples or parameter packs directly."}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Pack"}],"identifier":"doc:\/\/Tuple\/documentation\/Tupl-\/Pack","navigatorTitle":[{"kind":"identifier","text":"Pack"}],"kind":"symbol","url":"\/documentation\/tupl-\/pack","role":"symbol"},"doc://Tuple/documentation/Tupl-/callAsFunction(_:)":{"abstract":[{"type":"text","text":"Call multiple functions on one input."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"callAsFunction"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":", each "},{"kind":"genericParameter","text":"Transformed"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Error"},{"kind":"text","text":">((repeat ("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Error"},{"kind":"text","text":") -> each "},{"kind":"typeIdentifier","text":"Transformed"},{"kind":"text","text":")) -> ("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Error"},{"kind":"text","text":") -> (repeat each "},{"kind":"typeIdentifier","text":"Transformed"},{"kind":"text","text":")"}],"url":"\/documentation\/tupl-\/callasfunction(_:)","role":"symbol","identifier":"doc:\/\/Tuple\/documentation\/Tupl-\/callAsFunction(_:)","type":"topic","title":"callAsFunction(_:)"},"doc://Tuple/documentation/Tupl-/appending(_:)":{"kind":"symbol","url":"\/documentation\/tupl-\/appending(_:)","title":"appending(_:)","role":"symbol","identifier":"doc:\/\/Tuple\/documentation\/Tupl-\/appending(_:)","type":"topic","abstract":[{"type":"text","text":"Adds an element to the end of a tuple."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"appending"},{"kind":"text","text":"<each "},{"kind":"genericParameter","text":"Element"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Last"},{"kind":"text","text":">((repeat each "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":")) -> ("},{"kind":"typeIdentifier","text":"Last"},{"kind":"text","text":") -> (repeat each "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Last"},{"kind":"text","text":")"}]}}}